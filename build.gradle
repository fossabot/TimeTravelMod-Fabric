plugins {
    id 'fabric-loom' version '0.2.6-SNAPSHOT'
    id 'maven-publish'
}

def apiVersion

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = 'TimeTravelMod-Fabric'
group = 'com.rdvdev2.TimeTravelMod'

minecraft {
}

dependencies {
    minecraft "com.mojang:minecraft:1.15.2"
    mappings "net.fabricmc:yarn:1.15.2+build.15:v2"
    modCompile "net.fabricmc:fabric-loader:0.7.10+build.191"

    modCompile "net.fabricmc.fabric-api:fabric-api:0.5.1+build.294-1.15"
    modImplementation "me.shedaniel.cloth:config-2:2.13.2"
    include "me.shedaniel.cloth:config-2:2.13.2"
    modImplementation "me.sargunvohra.mcmods:autoconfig1u:2.0"
    include "me.sargunvohra.mcmods:autoconfig1u:2.0"
    modImplementation "io.github.prospector:modmenu:1.10.2+build.32"

    implementation 'org.jetbrains:annotations:15.0'
}

processResources {
    def versionPropsFile = file('version.properties')
    inputs.file versionPropsFile

    Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionPropsFile))

    def mc = versionProps['MC']
    def majormod = versionProps['MAJORMOD']
    def majorapi = versionProps['MAJORAPI']
    def minor = versionProps['MINOR']
    def patch = versionProps['PATCH']

    apiVersion = mc + "-" + majormod + "." + majorapi
    project.version = apiVersion + "." + minor + "." + patch

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes(["Specification-Title": "Fabric Loader",
                    "Specification-Vendor": "The Fabric Loader Team",
                    "Specification-Version": "0.4.0",
                    "Implementation-Title": "Time Travel Mod",
                    "Implementation-Version": project.version,
                    "Implementation-Vendor" :"rdvdev2",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
    from "LICENSE"
}
